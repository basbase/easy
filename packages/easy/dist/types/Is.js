"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isError = exports.isPrimitive = exports.isIntersecting = exports.isIn = exports.isInstance = exports.isArray = exports.isFunction = exports.isEmptyObject = exports.isObject = exports.isNumber = exports.isTrue = exports.isBoolean = exports.isIsoDateString = exports.isString = exports.isNotEmpty = exports.isEmpty = exports.isDefined = void 0;
const isDefined = (o) => o !== undefined && o !== null;
exports.isDefined = isDefined;
const isEmpty = (o) => o === '' || o === null || o === undefined || ((0, exports.isArray)(o) && o.length === 0);
exports.isEmpty = isEmpty;
const isNotEmpty = (o) => o !== '' && o !== null && o !== undefined && (!(0, exports.isArray)(o) || o.length > 0);
exports.isNotEmpty = isNotEmpty;
const isString = (o) => o instanceof String || typeof o === 'string';
exports.isString = isString;
const isIsoDateString = (o) => (0, exports.isString)(o) && /^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)$/.test(o);
exports.isIsoDateString = isIsoDateString;
const isBoolean = (o) => (0, exports.isDefined)(o) && typeof o === 'boolean';
exports.isBoolean = isBoolean;
const isTrue = (o) => ((0, exports.isFunction)(o) ? (0, exports.isTrue)(o()) : (0, exports.isBoolean)(o) ? o : !!o);
exports.isTrue = isTrue;
const isNumber = (o) => (0, exports.isDefined)(o) && typeof o === 'number' && !Number.isNaN(o);
exports.isNumber = isNumber;
const isObject = (o) => o != null && (typeof o === 'object' || typeof o === 'function') && !(0, exports.isArray)(o);
exports.isObject = isObject;
const isEmptyObject = (o) => (0, exports.isObject)(o) && Object.getOwnPropertyNames(o).length === 0;
exports.isEmptyObject = isEmptyObject;
const isFunction = (o) => (0, exports.isDefined)(o) && typeof o === 'function';
exports.isFunction = isFunction;
const isArray = (o) => (0, exports.isDefined)(o) && o instanceof Array;
exports.isArray = isArray;
const isInstance = (ctor, o) => (0, exports.isFunction)(ctor) && o instanceof ctor;
exports.isInstance = isInstance;
const isIn = (o, values) => (0, exports.isArray)(values) && values.some(v => v === o);
exports.isIn = isIn;
const isIntersecting = (o, values) => (0, exports.isArray)(o) && (0, exports.isArray)(values) && o.some(ov => (0, exports.isIn)(ov, values));
exports.isIntersecting = isIntersecting;
const isPrimitive = (o) => !(0, exports.isObject)(o) && !(0, exports.isFunction)(o) && !(0, exports.isArray)(o);
exports.isPrimitive = isPrimitive;
const isError = (e) => (0, exports.isDefined)(e) && e instanceof Error;
exports.isError = isError;
//# sourceMappingURL=Is.js.map